import{_ as s,o as a,c as n,V as l}from"./chunks/framework.f4d827d1.js";const d=JSON.parse('{"title":"闭包","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/javascript/4-闭包.md","filePath":"front-end/javascript/4-闭包.md","lastUpdated":1691124876000}'),o={name:"front-end/javascript/4-闭包.md"},p=l(`<h1 id="闭包" tabindex="-1">闭包 <a class="header-anchor" href="#闭包" aria-label="Permalink to &quot;闭包&quot;">​</a></h1><p>在javaScript中的变量作用域分为全局变量和局部变量；通过javaScript的作用域链，函数内部可以直接读取全局变量，但是函数外面无法读取函数内部的变量。</p><p><strong>闭包就是能够读取其他函数内部变量的函数。</strong></p><p>在函数A内部再定义一个函数B，读取外部函数A的变量，最后再把内部的函数B返回出去，即可在函数A外面读取函数A内部的变量。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">A</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">aaa</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">A aaa</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">B</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">aaa</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> foo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">A</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">foo</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// A aaa</span></span></code></pre></div><h2 id="闭包的作用" tabindex="-1">闭包的作用 <a class="header-anchor" href="#闭包的作用" aria-label="Permalink to &quot;闭包的作用&quot;">​</a></h2><h4 id="读取函数内部的变量" tabindex="-1">读取函数内部的变量 <a class="header-anchor" href="#读取函数内部的变量" aria-label="Permalink to &quot;读取函数内部的变量&quot;">​</a></h4><h4 id="让变量保持在内存中-不被gc掉" tabindex="-1">让变量保持在内存中，不被GC掉 <a class="header-anchor" href="#让变量保持在内存中-不被gc掉" aria-label="Permalink to &quot;让变量保持在内存中，不被GC掉&quot;">​</a></h4><h2 id="使用闭包的注意点" tabindex="-1">使用闭包的注意点 <a class="header-anchor" href="#使用闭包的注意点" aria-label="Permalink to &quot;使用闭包的注意点&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>闭包会在父函数外部，改变父函数内部变量的值。所以，如果你把父函数当作对象（object）使用，把闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一定要小心，不要随便改变父函数内部变量的值。</p></div><p><a href="https://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html" target="_blank" rel="noreferrer">学习Javascript闭包（Closure） - 阮一峰的网络日志</a></p>`,12),e=[p];function t(c,r,i,y,F,D){return a(),n("div",null,e)}const h=s(o,[["render",t]]);export{d as __pageData,h as default};
