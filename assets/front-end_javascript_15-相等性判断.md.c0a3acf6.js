import{_ as s,o as a,c as l,V as n}from"./chunks/framework.f4d827d1.js";const A=JSON.parse('{"title":"相等性判断","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/javascript/15-相等性判断.md","filePath":"front-end/javascript/15-相等性判断.md","lastUpdated":1691072092000}'),o={name:"front-end/javascript/15-相等性判断.md"},p=n(`<h1 id="相等性判断" tabindex="-1">相等性判断 <a class="header-anchor" href="#相等性判断" aria-label="Permalink to &quot;相等性判断&quot;">​</a></h1><h2 id="严格相等" tabindex="-1">严格相等 === <a class="header-anchor" href="#严格相等" aria-label="Permalink to &quot;严格相等 ===&quot;">​</a></h2><p>三等号（ <code>===</code> ）做的比较与双等号相同（包括对 <code>NaN</code>、<code>-0</code> 和 <code>+0</code> 的特殊处理）<strong>但不进行类型转换</strong>；如果类型不同，则返回 <code>false</code>；</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)和 Type(y)不同，返回 false</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)和 Type(y)相同</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)是 Undefined，返回 true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)是 Null，返回 true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)是 String，当且仅当 x,y 字符序列完全相同（长度相同，每个位置上的字符也相同）时返回 true，否则返回 false</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)是 Boolean，如果 x,y 都是 true 或 x,y 都是 false 返回 true，否则返回 false</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)是 Symbol，如果 x,y 是相同的 Symbol 值，返回 true,否则返回 false</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)是 Number 类型</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 x 是 NaN，返回 false</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 y 是 NaN，返回 false</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 x 的数字值和 y 相等，返回 true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 x 是+0，y 是-0，返回 true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 x 是-0，y 是+0，返回 true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 其他返回 false</span></span></code></pre></div><ul><li><p>严格相等比较两个值是否相等。两个被比较的值在比较前都不进行隐式转换。</p></li><li><p>如果两个被比较的值具有不同的类型，这两个值是不相等的。</p></li><li><p>如果两个被比较的值类型相同，值也相同，并且都不是 <code>number</code> 类型时，两个值相等。</p></li><li><p>如果两个值都是 <code>number</code> 类型，当两个都不是 <code>NaN</code> ，并且数值相同。</p></li><li><p>或是两个值分别为 <code>+0</code> 和 <code>-0</code> 时，两个值被认为是相等的。</p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//true</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>数组索引查找方法也使用严格相等，包括：</p><ul><li>Array.prototype.indexOf()、</li><li>Array.prototype.lastIndexOf()、</li><li>TypedArray.prototype.index()、</li><li>TypedArray.prototype.lastIndexOf()</li><li>case 匹配</li></ul></div><h2 id="宽松相等" tabindex="-1">宽松相等 == <a class="header-anchor" href="#宽松相等" aria-label="Permalink to &quot;宽松相等 ==&quot;">​</a></h2><p><strong>双等号（ <code>==</code> ）将执行类型转换</strong>，并且会按照 IEEE 754 标准对 <code>NaN</code> 、<code>-0</code> 和 <code>+0</code> 进行特殊处理（故 <code>NaN</code> != <code>NaN</code>，且 <code>-0</code> == <code>+0</code>）；</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)和 Type(y)相同，返回 x===y 的结果</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)和 Type(y)不同</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 x 是 null，y 是 undefined，返回 true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 x 是 undefined，y 是 null，返回 true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)是 Number，Type(y)是 String，返回 x==ToNumber(y) 的结果</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)是 String，Type(y)是 Number，返回 ToNumber(x)==y 的结果</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)是 Boolean，返回 ToNumber(x)==y 的结果</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(y)是 Boolean，返回 x==ToNumber(y) 的结果</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)是 String 或 Number 或 Symbol 中的一种并且 Type(y)是 Object，返回 x==ToPrimitive(y) 的结果</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 如果 Type(x)是 Object 并且 Type(y)是 String 或 Number 或 Symbol 中的一种，返回 ToPrimitive(x)==y 的结果</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> 其他返回 false</span></span></code></pre></div><h4 id="_1-如果操作数具有相同的类型-则按以下方式进行比较" tabindex="-1">1. 如果操作数具有相同的类型，则按以下方式进行比较： <a class="header-anchor" href="#_1-如果操作数具有相同的类型-则按以下方式进行比较" aria-label="Permalink to &quot;1. 如果操作数具有相同的类型，则按以下方式进行比较：&quot;">​</a></h4><ul><li><p><code>Object</code> ：仅当两个操作数引用相同的对象时，才返回 <code>true</code> 。</p></li><li><p><code>String</code> ：仅当两个操作数具有相同的字符并且顺序相同，才返回 <code>true</code> 。</p></li><li><p><code>Number</code> ：仅当两个操作数具有相同的值时，才返回 <code>true</code> 。<code>+0</code> 和 <code>-0</code> 被视为相同的值。如果任一操作数为 <code>NaN</code>，则返回 <code>false</code>；因此 <code>NaN</code> 永远不等于 <code>NaN</code> 。</p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NaN;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span></code></pre></div><ul><li><p><code>Boolean</code>：仅当操作数都是 <code>true</code> 或 <code>false</code> 时，才返回 <code>true</code> 。</p></li><li><p><code>BigInt</code>：仅当两个操作数具有相同的值时，才返回 <code>true</code> 。</p></li><li><p><code>Symbol</code>：仅当两个操作数引用相同的 <code>symbol</code> 时，才返回 <code>true</code> 。</p></li></ul><h4 id="_2-如果操作数之一为-null-或-undefined-则另一个操作数必须为-null-或-undefined-才返回-true-。否则返回-false-。" tabindex="-1">2.如果操作数之一为 <code>null</code> 或 <code>undefined</code> ，则另一个操作数必须为 <code>null</code> 或 <code>undefined</code> 才返回 <code>true</code> 。否则返回 <code>false</code> 。 <a class="header-anchor" href="#_2-如果操作数之一为-null-或-undefined-则另一个操作数必须为-null-或-undefined-才返回-true-。否则返回-false-。" aria-label="Permalink to &quot;2.如果操作数之一为 \`null\` 或 \`undefined\` ，则另一个操作数必须为 \`null\` 或 \`undefined\` 才返回 \`true\` 。否则返回 \`false\` 。&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">undefined;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"><span style="color:#89DDFF;">undefined</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span></code></pre></div><h4 id="_3-如果操作数之一是对象-而另一个是原始值-则将对象转换为原始值。" tabindex="-1">3.如果操作数之一是对象，而另一个是原始值，则将对象转换为原始值。 <a class="header-anchor" href="#_3-如果操作数之一是对象-而另一个是原始值-则将对象转换为原始值。" aria-label="Permalink to &quot;3.如果操作数之一是对象，而另一个是原始值，则将对象转换为原始值。&quot;">​</a></h4><h2 id="同值相等比较-object-is" tabindex="-1">同值相等比较 Object.is() <a class="header-anchor" href="#同值相等比较-object-is" aria-label="Permalink to &quot;同值相等比较 Object.is()&quot;">​</a></h2><ul><li><code>+0</code> 和 <code>-0</code> 不相等</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">is</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//false</span></span>
<span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">is</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">NaN,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//true</span></span></code></pre></div><h2 id="零值相等-samevaluezero" tabindex="-1">零值相等 SameValueZero <a class="header-anchor" href="#零值相等-samevaluezero" aria-label="Permalink to &quot;零值相等 SameValueZero&quot;">​</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">sameValueZero</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">x</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">y</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">number</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">number</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// x 和 y 相等（可能是 -0 和 0）或它们都是 NaN</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ul><li>零值相等与严格相等的区别在于其将 <code>NaN</code> 视作是相等的;</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NaN;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//false</span></span>
<span class="line"><span style="color:#82AAFF;">sameValueZero</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">NaN,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//true</span></span></code></pre></div><ul><li>与同值相等的区别在于其将 <code>-0</code> 和 <code>0</code> 视作相等的。</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">is</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//false</span></span>
<span class="line"><span style="color:#82AAFF;">sameValueZero</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//true</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>以下方法使用零值相等：</p><ul><li>Array.prototype.includes()</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">[</span><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">NaN</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div><ul><li>TypedArray.prototype.includes()</li><li>Map</li><li>Set</li></ul></div>`,27),e=[p];function t(c,r,y,D,i,C){return a(),l("div",null,e)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
